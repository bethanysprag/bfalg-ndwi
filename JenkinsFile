#!/usr/bin/groovy

node {
  def root = pwd()
  def mvn = tool 'M3'
  def fortifyBuild = "bfalg-ndwi-${env.BUILD_NUMBER}"
  def sonar = tool 'SonarQube Runner 2.8'
  def projectId = "venicegeo:beachfront:bfalg-ndwi"
  def appvers = ""
  def appName = ""

  stage("Setup") {
    deleteDir()
    sh "mkdir bfalg-ndwi"
    dir("bfalg-ndwi") {
      if(env.GITLAB_CREDS) {
        git url: "${env.GIT_URL}", branch: "${env.GIT_BRANCH}", credentialsId: "${env.GITLAB_CREDS}"
      } else {
        git url: "${env.GIT_URL}", branch: "${env.GIT_BRANCH}"
      }

    appvers = sh(script: """git describe --long --tags --always | sed 's/\\./-/'g""", returnStdout: true).trim()
    appName = "bfalg-ndwi-${appvers}"
    }
  }

  stage("Dependency Check") {
    withCredentials([
      [$class: 'StringBinding', credentialsId: "${env.THREADFIX_API_KEY}", variable: "THREADFIX_KEY"]
      ]) {
        dir("bfalg-ndwi") {
          sh "/jslave/dependency-check/dependency-check/bin/dependency-check.sh --version"
          sh "/jslave/dependency-check/dependency-check/bin/dependency-check.sh --project "bfalg-ndwi" --scan '.' --format "XML" --enableExperimental --disableBundleAudit"
          sh "/bin/curl -v --insecure -H 'Accept: application/json' -X POST --form file=@dependency-check-report.xml ${env.THREADFIX_URL}/rest/applications/${THREADFIX_ID}/upload?apiKey=${THREADFIX_KEY}"
        }
      }
  }

  stage("Fortify Scans") {
        withCredentials([
          [$class: 'StringBinding', credentialsId: "${env.THREADFIX_API_KEY}", variable: "THREADFIX_KEY"]
        ]) {
          dir("bfalg-ndwi") {
            sh "/opt/hp_fortify_sca/bin/sourceanalyzer -b ${fortifyBuild} -python-path `python -c "import sys;print ':'.join(sys.path)"` {*.py,**/*.py}"
            sh "/opt/hp_fortify_sca/bin/sourceanalyzer -b ${fortifyBuild} -scan -python-path `python -c "import sys;print ':'.join(sys.path)"` -Xmx1G -f fortifyResults-${fortifyBuild}.fpr"
            sh "/bin/curl -v --insecure -H 'Accept: application/json' -X POST --form file=@fortifyResults-${fortifyBuild}.fpr ${env.THREADFIX_URL}/rest/applications/${THREADFIX_ID}/upload?apiKey=${THREADFIX_KEY}"
          }
        }
  }
	/*
    stage("Sonar") {
        withCredentials([string(credentialsId: "${env.SONAR_TOKEN}", variable: 'USERNAME')]) {
            withEnv(["HOME=${root}"]) {
                sh """export PATH="$root/miniconda2/bin:$PATH" && source activate bfalg-ndwi
		  ${sonar}/bin/sonar-scanner \
                    -Dsonar.python.coverage.reportPath=report/coverage/coverage.xml \
                    -Dsonar.sources=${root}/bfalg-ndwi/bfalg_ndwi \
                    -Dsonar.host.url=${env.SONAR_URL} \
                    -Dsonar.projectKey=${projectId} \
                    -Dsonar.projectName=${projectId} \
                    -Dsonar.language=py \
                    -Dsonar.projectBaseDir=${root}/bfalg-ndwi \
                    -Dsonar.projectVersion=${appvers} \
                    -Dsonar.login=${USERNAME}
		  source deactivate
                """
            }
        }
		sh "rm $HOME/.condarc"
    }*/
}
